{
  "basePath": "/v1",
  "consumes": [
    "application/json"
  ],
  "definitions": {},
  "host": "api.sandbox.cnrd.io",
  "info": {
    "contact": {
      "email": "connected.radio@dts.com",
      "name": "DTS Connected Radio",
      "url": "https://www.connectedrad.io"
    },
    "description": "This is the DTS Connected Radio API, designed to provide static and dynamic metadata for global analog and digital radio broadcasts, in addition to enhanced services supporting an advanced radio experience.\n\nThis API is referred to as the CONRAD API throughout the documentation.\n\nAPI interaction is available via SSL/TLS encryption only, and the use of HTTP compression is highly encouraged to reduce data consumption.\n\nIf a key specified in the API spec is missing from a response, the value should be assumed `null`. All booleans will have default values specified in the documentation if they are not present in a response.",
    "title": "DTS Connected Radio API",
    "version": "1.2.0"
  },
  "parameters": {},
  "paths": {
    "/broadcasts": {
      "get": {
        "description": "Retrieves a list of `Broadcast` objects from a location query, frequencies, GCC/ensemble IDs pairs, or GCC/piCode pairs.\n\nThis is the general query type, designed to be used by most clients with access to one or more tuners.\n\nThe majority of the queries to this path will be latitude and longitude only, but extended query types for different broadcast technologies are supported.\n\nThis method accepts a query with required coordinates and further data on stations that are available based on tuner reception. This may include purely analog frequencies or DAB GCC and ensemble ID pairs, or GCC and PI code pairs. The API will return a list of stations based on the data presented in the query. The more descriptive data the client can deliver in the query, the more accurate the resulting broadcast list will be.\n\nThe minimum query components are lat/lng and deviceId.\n\nThe result is an array of objects, each with a unique identifier, and broadcast details related to their broadcast technology. The list may be contain broadcast definitions representing multiple different broadcast technologies. All results are best-effort, and objects may contain only minimal data -- not every pair in the object may be populated or present for every object in a response array.",
        "operationId": "getStationsByQuery",
        "parameters": [
          {
            "$ref": "./delivery_common.oas2.yml#/parameters/mfgId"
          },
          {
            "$ref": "./delivery_common.oas2.yml#/parameters/Authorization"
          },
          {
            "$ref": "./delivery_common.oas2.yml#/parameters/lat"
          },
          {
            "$ref": "./delivery_common.oas2.yml#/parameters/lng"
          },
          {
            "$ref": "./delivery_common.oas2.yml#/parameters/deviceType"
          },
          {
            "$ref": "./delivery_common.oas2.yml#/parameters/freq"
          },
          {
            "$ref": "./delivery_common.oas2.yml#/parameters/rds"
          },
          {
            "$ref": "./delivery_common.oas2.yml#/parameters/dab"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "examples": {
              "application/json": {
                "analog": [
                  {
                    "broadcastId": "12345",
                    "ecc": "E0",
                    "piCode": "D310",
                    "freq": 103700,
                    "band": "FM",
                    "country": "US",
                    "broadcastData": {
                      "name": "103.7FM The Rock",
                      "slogan": "Yesterday and Today's Rock Hits!",
                      "sortKey": "abc",
                      "stationId": "12345",
                      "contentId": "12345",
                      "languages": [
                        "en-US",
                        "en-US",
                        "en-US"
                      ],
                      "callSign": "WKRP",
                      "translator": "W212AB",
                      "enableThumbs": true,
                      "enableShare": true,
                      "format": "music",
                      "description": "Modern and classic rock music",
                      "longDescription": "Central Pennsylvania's rock source, with Kim and Tom in the morning!",
                      "logoURL": "https://example.cnrd.io/img/abcdefg.png",
                      "logoURLHiRes": "https://example.cnrd.io/img/abcdefg-hires.png",
                      "sfOnIconURL": "https://example.cnrd.io/img/2/2/2210d149ef776682bc583a919046aacb.png",
                      "sfOffIconURL": "https://example.cnrd.io/img/a/3/a30183ea6cf6e345691dda5c94a97e5e.png",
                      "sfOnIconURLWide": "https://example.cnrd.io/img/e/8/e83993f9ecde475ced101978b0e4602d.png",
                      "sfOffIconURLWide": "https://example.cnrd.io/img/9/5/950d73b2d78c51ac794c2346d816b2e3.png",
                      "mqURI": "amqp://username:password@amqp.hostname.com/vhost",
                      "mqExchange": "live",
                      "mqKey": "#.broadcast.12345",
                      "genreIds": [
                        123,
                        123,
                        123
                      ],
                      "hasLiveData": true,
                      "useLiveUnverified": true,
                      "email": [
                        "user@example.cnrd.io",
                        "user@example.cnrd.io",
                        "user@example.cnrd.io"
                      ],
                      "urls": {
                        "website": [
                          "http://www.example.cnrd.io",
                          "http://www.example.cnrd.io",
                          "http://www.example.cnrd.io"
                        ],
                        "facebook": [
                          "https://www.facebook.com/wkrprock",
                          "https://www.facebook.com/wkrprock",
                          "https://www.facebook.com/wkrprock"
                        ],
                        "twitter": [
                          "https://twitter.com/wkrprock",
                          "https://twitter.com/wkrprock",
                          "https://twitter.com/wkrprock"
                        ]
                      },
                      "phone": [
                        "12345678901",
                        "12345678901",
                        "12345678901"
                      ],
                      "sms": [
                        "123456",
                        "123456",
                        "123456"
                      ],
                      "streams": [
                        {
                          "url": "http://radiostream.url.com/stream",
                          "format": "mp3",
                          "sampleRate": 44100,
                          "bitrate": 64000,
                          "preroll": 42
                        }
                      ]
                    }
                  }
                ],
                "hdradio": [
                  {
                    "broadcastId": "12345",
                    "piCode": "A123",
                    "stationId": "foo",
                    "countryCode": "foo",
                    "location": "43.094, -71.730",
                    "channel": "1",
                    "freq": 103700,
                    "band": "FM",
                    "country": "US",
                    "broadcastData": null
                  }
                ],
                "dab": [
                  {
                    "broadcastId": "12345",
                    "eid": "C186",
                    "freq": 223,
                    "sid": "C1C2",
                    "scids": "0",
                    "channel": "12A",
                    "country": "US",
                    "broadcastData": null
                  }
                ]
              }
            },
            "schema": {
              "$ref": "./delivery_common.oas2.yml#/definitions/BroadcastList"
            }
          },
          "400": {
            "$ref": "./delivery_common.oas2.yml#/responses/400"
          },
          "401": {
            "$ref": "./delivery_common.oas2.yml#/responses/401"
          },
          "500": {
            "$ref": "./delivery_common.oas2.yml#/responses/500"
          }
        },
        "security": [
          {
            "Authorization": []
          },
          {
            "mfgId": []
          }
        ],
        "summary": "Retrieve data for all local broadcast stations via standard HTTP GET query.",
        "tags": [
          "Broadcasts"
        ]
      }
    },
    "/broadcasts/{broadcastId}": {
      "get": {
        "description": "Retrieves an individual `Broadcast` object given a broadcast ID.",
        "operationId": "getBroadcastByID",
        "parameters": [
          {
            "$ref": "./delivery_common.oas2.yml#/parameters/mfgId"
          },
          {
            "$ref": "./delivery_common.oas2.yml#/parameters/Authorization"
          },
          {
            "$ref": "./delivery_common.oas2.yml#/parameters/broadcastId"
          },
          {
            "$ref": "./delivery_common.oas2.yml#/parameters/lat"
          },
          {
            "$ref": "./delivery_common.oas2.yml#/parameters/lng"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "examples": {
              "application/json": {
                "analog": {
                  "broadcastId": "12345",
                  "ecc": "E0",
                  "piCode": "D310",
                  "freq": 103700,
                  "band": "FM",
                  "country": "US",
                  "broadcastData": {
                    "name": "103.7FM The Rock",
                    "slogan": "Yesterday and Today's Rock Hits!",
                    "sortKey": "abc",
                    "stationId": "12345",
                    "contentId": "12345",
                    "languages": [
                      "en-US",
                      "en-US",
                      "en-US"
                    ],
                    "callSign": "WKRP",
                    "translator": "W212AB",
                    "enableThumbs": true,
                    "enableShare": true,
                    "format": "music",
                    "description": "Modern and classic rock music",
                    "longDescription": "Central Pennsylvania's rock source, with Kim and Tom in the morning!",
                    "logoURL": "https://example.cnrd.io/img/abcdefg.png",
                    "logoURLHiRes": "https://example.cnrd.io/img/abcdefg-hires.png",
                    "sfOnIconURL": "https://example.cnrd.io/img/2/2/2210d149ef776682bc583a919046aacb.png",
                    "sfOffIconURL": "https://example.cnrd.io/img/a/3/a30183ea6cf6e345691dda5c94a97e5e.png",
                    "sfOnIconURLWide": "https://example.cnrd.io/img/e/8/e83993f9ecde475ced101978b0e4602d.png",
                    "sfOffIconURLWide": "https://example.cnrd.io/img/9/5/950d73b2d78c51ac794c2346d816b2e3.png",
                    "mqURI": "amqp://username:password@amqp.hostname.com/vhost",
                    "mqExchange": "live",
                    "mqKey": "#.broadcast.12345",
                    "genreIds": [
                      123,
                      123,
                      123
                    ],
                    "hasLiveData": true,
                    "useLiveUnverified": true,
                    "email": [
                      "user@example.cnrd.io",
                      "user@example.cnrd.io",
                      "user@example.cnrd.io"
                    ],
                    "urls": {
                      "website": [
                        "http://www.example.cnrd.io",
                        "http://www.example.cnrd.io",
                        "http://www.example.cnrd.io"
                      ],
                      "facebook": [
                        "https://www.facebook.com/wkrprock",
                        "https://www.facebook.com/wkrprock",
                        "https://www.facebook.com/wkrprock"
                      ],
                      "twitter": [
                        "https://twitter.com/wkrprock",
                        "https://twitter.com/wkrprock",
                        "https://twitter.com/wkrprock"
                      ]
                    },
                    "phone": [
                      "12345678901",
                      "12345678901",
                      "12345678901"
                    ],
                    "sms": [
                      "123456",
                      "123456",
                      "123456"
                    ],
                    "streams": [
                      {
                        "url": "http://radiostream.url.com/stream",
                        "format": "mp3",
                        "sampleRate": 44100,
                        "bitrate": 64000,
                        "preroll": 42
                      }
                    ]
                  }
                },
                "hdradio": {
                  "broadcastId": "12345",
                  "piCode": "A123",
                  "stationId": "foo",
                  "countryCode": "foo",
                  "location": "43.094, -71.730",
                  "channel": "1",
                  "freq": 103700,
                  "band": "FM",
                  "country": "US",
                  "broadcastData": null
                },
                "dab": {
                  "broadcastId": "12345",
                  "eid": "C186",
                  "freq": 223,
                  "sid": "C1C2",
                  "scids": "0",
                  "channel": "12A",
                  "country": "US",
                  "broadcastData": null
                }
              }
            },
            "schema": {
              "$ref": "./delivery_common.oas2.yml#/definitions/Broadcast"
            }
          },
          "301": {
            "$ref": "./delivery_common.oas2.yml#/responses/Broadcasts-301"
          },
          "400": {
            "$ref": "./delivery_common.oas2.yml#/responses/400"
          },
          "401": {
            "$ref": "./delivery_common.oas2.yml#/responses/401"
          },
          "410": {
            "$ref": "./delivery_common.oas2.yml#/responses/Broadcasts-410"
          },
          "500": {
            "$ref": "./delivery_common.oas2.yml#/responses/500"
          }
        },
        "security": [
          {
            "Authorization": []
          },
          {
            "mfgId": []
          }
        ],
        "summary": "Retrieve data pertaining to a single broadcast by ID.",
        "tags": [
          "Broadcasts"
        ]
      }
    },
    "/broadcasts/{broadcastId}/live": {
      "get": {
        "description": "\n***Note: Data from the `/broadcasts/{broadcastId}/live` path is currently available for thousands of North American broadcasts, and selected cities in Europe and Asia, such as Berlin, Germany; London, UK; Paris, France; Tokyo, Japan; and Seoul, South Korea. Live data for other geographic regions is coming.***\n\nThe `/broadcasts/{broadcastId}/live` path retrieves live/now-playing data objects for a specific broadcast ID. This is the path that is called when a client needs data on what content is currently playing on a specfic broadcast for purposes of displaying song or program information, album art, and other data if that data exists for that broadcast.\n\nThis path is to be used when triggered by the message queue notifications for this broadcast. The AMQP connection URI is specified in `Broadcasts#broadcastData.mqURI`, along with `mqKey` and `mqExchange`.  The message queue push data is in the form of `broadcastId,liveId`. Upon receiving the message via the AMQP queue, the client should call `/broadcasts/{broadcastId}/live` to retrieve the live data object.\n\nThis method is not intended to be polled at timed intervals or used without subscription to the AMQP queue and routing key for a specific broadcast. It may be used for a single snapshot of data for a station or small set of stations to enhance a station guide display.\n\nHowever, a call to `/broadcasts/{broadcastId}/live` should be made prior to subscribing to the message queue for a specific broadcast in order to retrieve current data before subscribing to receive notifications to retrieve new data.\n\nIf a client is disconnected from the AMQP service, it should attempt to reconnect and subscribe to the routing key again. In addition, it should request `/broadcasts/{broadcastId}/live` immediately to ensure that the latest available live data is presented. If reconnection is not possible for an extended length of time, then the client should cease presenting live data until the connection can be resumed.\n\nNot all broadcast IDs will have a live data feed. See the key `hasLiveData` in each station record in a response to a `/broadcasts` query.\n\nIf the response to a GET is `202 Accepted`, then the client is to wait for config parameter `liveDataRetry` seconds before retrying the GET. This is because we may need to gather the requested data from other sources and techniques that require several seconds to complete.\n\nIf this path returns a `404 Not Found`, no live data is currently available for that `broadcastId`.",
        "operationId": "getLiveData",
        "parameters": [
          {
            "$ref": "./delivery_common.oas2.yml#/parameters/mfgId"
          },
          {
            "$ref": "./delivery_common.oas2.yml#/parameters/Authorization"
          },
          {
            "$ref": "./delivery_common.oas2.yml#/parameters/broadcastId"
          },
          {
            "$ref": "./delivery_common.oas2.yml#/parameters/lat"
          },
          {
            "$ref": "./delivery_common.oas2.yml#/parameters/lng"
          },
          {
            "$ref": "./delivery_common.oas2.yml#/parameters/disp"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "examples": {
              "application/json": {
                "id": "abcdef12345",
                "type": "music",
                "duration": 305,
                "musicData": {
                  "title": "All Blues",
                  "album": "Kind of Blue",
                  "artist": "Miles Davis",
                  "enableThumbs": true,
                  "enableShare": true,
                  "images": [
                    {
                      "type": "artist",
                      "default": true,
                      "url": "https://s.cnrd.io/img/c/2/c2b12ed7860b3a1a123483dec90abf1ea3.jpg",
                      "urlHiRes": "https://s.cnrd.io/img/f/2/f2b12ed1234b3a1a123483dec90abf1ea6.jpg"
                    }
                  ],
                  "genreIds": [
                    3,
                    5
                  ]
                },
                "nmpData": {
                  "title": "Wait, Wait Don't Tell Me",
                  "program": "The NPR News Quiz",
                  "subject": "Today's guest: Tom Hanks",
                  "enableThumbs": true,
                  "enableShare": true,
                  "images": [
                    {
                      "type": "artist",
                      "default": true,
                      "url": "https://s.cnrd.io/img/c/2/c2b12ed7860b3a1a123483dec90abf1ea3.jpg",
                      "urlHiRes": "https://s.cnrd.io/img/f/2/f2b12ed1234b3a1a123483dec90abf1ea6.jpg"
                    }
                  ]
                },
                "adData": [
                  {
                    "type": "web",
                    "data": [
                      {
                        "type": "url",
                        "target": "http://example.url.com",
                        "content": "YES",
                        "text": [
                          "Tap here for more information"
                        ]
                      },
                      {
                        "type": "url",
                        "target": "http://example.url.com",
                        "content": "YES",
                        "text": [
                          "Tap here for more information"
                        ]
                      },
                      {
                        "type": "url",
                        "target": "http://example.url.com",
                        "content": "YES",
                        "text": [
                          "Tap here for more information"
                        ]
                      }
                    ]
                  },
                  {
                    "type": "web",
                    "data": [
                      {
                        "type": "url",
                        "target": "http://example.url.com",
                        "content": "YES",
                        "text": [
                          "Tap here for more information",
                          "Tap here for more information"
                        ]
                      },
                      {
                        "type": "url",
                        "target": "http://example.url.com",
                        "content": "YES",
                        "text": [
                          "Tap here for more information"
                        ]
                      },
                      {
                        "type": "url",
                        "target": "http://example.url.com",
                        "content": "YES",
                        "text": [
                          "Tap here for more information",
                          "Tap here for more information",
                          "Tap here for more information"
                        ]
                      }
                    ]
                  }
                ]
              }
            },
            "schema": {
              "$ref": "./delivery_common.oas2.yml#/definitions/Live"
            }
          },
          "202": {
            "description": "Response accepted, but waiting on data availability. Retry in `liveDataRetry` seconds."
          },
          "301": {
            "$ref": "./delivery_common.oas2.yml#/responses/Broadcasts-301"
          },
          "400": {
            "$ref": "./delivery_common.oas2.yml#/responses/400"
          },
          "401": {
            "$ref": "./delivery_common.oas2.yml#/responses/401"
          },
          "404": {
            "description": "No results found. This is not an indicator that live data is permanently unavailable for the `broadcastId`, just that it is not currently present at the time of query.",
            "examples": {
              "application/json": {
                "data": "foo",
                "result": "error"
              }
            },
            "schema": {
              "$ref": "./delivery_common.oas2.yml#/definitions/Error"
            }
          },
          "410": {
            "$ref": "./delivery_common.oas2.yml#/responses/Broadcasts-410"
          },
          "500": {
            "$ref": "./delivery_common.oas2.yml#/responses/500"
          }
        },
        "security": [
          {
            "Authorization": []
          },
          {
            "mfgId": []
          }
        ],
        "summary": "Retrieve live/now playing data for a specific broadcast",
        "tags": [
          "Live"
        ]
      }
    },
    "/config": {
      "get": {
        "description": "Retrieves a device configuration. This occurs at every startup and periodically as determined by the `configRefresh` variable.\n\nThe parameters specified in this object will dictate client behavior pertaining to API interaction. The values for keys in this object may change depending on the geographical location of the client, or when the API needs to control certain client interactions due to various internal considerations.\n\nClients should never hard-code values that are present in a `/config` response, they are to be updated whenever a new `/config` response is received, which may occur periodically during normal operation.",
        "operationId": "getDeviceConfig",
        "parameters": [
          {
            "$ref": "./delivery_common.oas2.yml#/parameters/mfgId"
          },
          {
            "$ref": "./delivery_common.oas2.yml#/parameters/Authorization"
          },
          {
            "$ref": "./delivery_common.oas2.yml#/parameters/lat"
          },
          {
            "$ref": "./delivery_common.oas2.yml#/parameters/lng"
          },
          {
            "$ref": "./delivery_common.oas2.yml#/parameters/geoCode"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "examples": {
              "application/json": {
                "deviceId": "aBc8deFG9",
                "mfgId": "D0K101",
                "geoCode": "global",
                "config": {
                  "enableAPI": true,
                  "enableLive": true,
                  "errorRetry": 60,
                  "configRefresh": 3600,
                  "liveDataRetry": 5,
                  "useMinQueries": false,
                  "defLogoURL": "https://example.cnrd.io/img/abcdefg.png",
                  "defLogoURLHiRes": "https://example.cnrd.io/img/abcdefg-hires.png",
                  "defAlbumURL": "https://example.cnrd.io/img/abcdefg.png",
                  "defAlbumURLHiRes": "https://example.cnrd.io/img/abcdefg-hires.png",
                  "expireBroadcastIds": [
                    "12345",
                    "12345",
                    "12345"
                  ],
                  "genreListCacheTTL": 86400,
                  "genreListCacheFlush": false,
                  "broadcastDataCacheTTL": 3600,
                  "broadcastDataCacheFlush": false,
                  "broadcastQueryRefreshRate": 600,
                  "altAPIURL": "https://new.api.url.com",
                  "altAPIURLEnabled": false,
                  "altAPIURLPermanent": false,
                  "signalReportInterval": 600,
                  "reportsMinInterval": 86400,
                  "reportsMaxInterval": 2592000,
                  "reportsMaxSize": 1024
                }
              }
            },
            "schema": {
              "$ref": "./delivery_common.oas2.yml#/definitions/DeviceResponse"
            }
          },
          "400": {
            "$ref": "./delivery_common.oas2.yml#/responses/400"
          },
          "401": {
            "$ref": "./delivery_common.oas2.yml#/responses/401"
          },
          "500": {
            "$ref": "./delivery_common.oas2.yml#/responses/500"
          }
        },
        "security": [
          {
            "Authorization": []
          },
          {
            "mfgId": []
          }
        ],
        "summary": "Request device configuration",
        "tags": [
          "Devices"
        ]
      }
    },
    "/devices": {
      "post": {
        "description": "Register a device and receive a unique device ID assigned by the API. This ID is assigned to each device once, during the first contact with the API. This device ID is retained by the client and used in all subsequent API interactions. The device ID is also used in the authentication process.\n\nIf a client does not have a valid API-assigned device ID present in non-volatile storage, the first API interaction shall be to register and receive this ID.\n\nThis request should only be made when the client is first initialized or if the client is reset to factory defaults.",
        "operationId": "registerDevice",
        "parameters": [
          {
            "$ref": "./delivery_common.oas2.yml#/parameters/mfgId"
          },
          {
            "description": "Authorization header. Please note that this authentication signature is different from all other Authorization headers in the API in that it uses `mfgId` not `deviceId` as the `deviceId` has not yet been acquired.\nThe format is `{mfgId},{hash}`, where the `hash` is `HMAC_SHA256(mfgSecret, mfgId)`.\nThe `hash` is hex digest, truncated to 24 characters.\nExample: `Authorization: DEV-0001,548bde0ad4db9c268556f9df`",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "Device registration data",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "./delivery_common.oas2.yml#/definitions/DevicesPost"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "examples": {
              "application/json": {
                "deviceId": "aBc8deFG9",
                "mfgId": "D0K101",
                "geoCode": "global",
                "config": {
                  "enableAPI": true,
                  "enableLive": true,
                  "errorRetry": 60,
                  "configRefresh": 3600,
                  "liveDataRetry": 5,
                  "useMinQueries": false,
                  "defLogoURL": "https://example.cnrd.io/img/abcdefg.png",
                  "defLogoURLHiRes": "https://example.cnrd.io/img/abcdefg-hires.png",
                  "defAlbumURL": "https://example.cnrd.io/img/abcdefg.png",
                  "defAlbumURLHiRes": "https://example.cnrd.io/img/abcdefg-hires.png",
                  "expireBroadcastIds": [
                    "12345",
                    "12345",
                    "12345"
                  ],
                  "genreListCacheTTL": 86400,
                  "genreListCacheFlush": false,
                  "broadcastDataCacheTTL": 3600,
                  "broadcastDataCacheFlush": false,
                  "broadcastQueryRefreshRate": 600,
                  "altAPIURL": "https://new.api.url.com",
                  "altAPIURLEnabled": false,
                  "altAPIURLPermanent": false,
                  "signalReportInterval": 600,
                  "reportsMinInterval": 86400,
                  "reportsMaxInterval": 2592000,
                  "reportsMaxSize": 1024
                }
              }
            },
            "schema": {
              "$ref": "./delivery_common.oas2.yml#/definitions/DeviceResponse"
            }
          },
          "400": {
            "$ref": "./delivery_common.oas2.yml#/responses/400"
          },
          "401": {
            "$ref": "./delivery_common.oas2.yml#/responses/401"
          },
          "500": {
            "$ref": "./delivery_common.oas2.yml#/responses/500"
          }
        },
        "security": [
          {
            "Authorization": []
          },
          {
            "mfgId": []
          }
        ],
        "summary": "Request device ID",
        "tags": [
          "Devices"
        ]
      }
    },
    "/genres": {
      "get": {
        "description": "Retrieves genre data. Genres and sub-genres are specified in broadcast records by ID. This path retrieves the genre name/ID pairs to be used in display.\n\nWe will be modifying and consolidating the genre lists over time, so the entries in this list will become more concise.",
        "operationId": "getGenreData",
        "parameters": [
          {
            "$ref": "./delivery_common.oas2.yml#/parameters/mfgId"
          },
          {
            "$ref": "./delivery_common.oas2.yml#/parameters/Authorization"
          },
          {
            "$ref": "./delivery_common.oas2.yml#/parameters/lang"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "examples": {
              "application/json": [
                {
                  "id": 1,
                  "name": "Adult Contemporary"
                },
                {
                  "id": 2,
                  "name": "Classical"
                },
                {
                  "id": 3,
                  "name": "Country"
                },
                {
                  "id": 4,
                  "name": "Family"
                },
                {
                  "id": 5,
                  "name": "Hip Hop/Urban"
                },
                {
                  "id": 6,
                  "name": "Jazz/Blues"
                },
                {
                  "id": 7,
                  "name": "News/Talk"
                },
                {
                  "id": 8,
                  "name": "Oldies"
                },
                {
                  "id": 9,
                  "name": "R&B"
                },
                {
                  "id": 10,
                  "name": "Religious"
                },
                {
                  "id": 11,
                  "name": "Rock"
                },
                {
                  "id": 12,
                  "name": "Spanish"
                },
                {
                  "id": 13,
                  "name": "Sports"
                },
                {
                  "id": 14,
                  "name": "The Decades"
                },
                {
                  "id": 15,
                  "name": "Top 40/Pop"
                },
                {
                  "id": 16,
                  "name": "World/Variety"
                },
                {
                  "id": 17,
                  "name": "Comedy"
                },
                {
                  "id": 18,
                  "name": "Public Radio"
                },
                {
                  "id": 19,
                  "name": "Other"
                }
              ]
            },
            "schema": {
              "items": {
                "$ref": "./delivery_common.oas2.yml#/definitions/GenreListObject"
              },
              "type": "array"
            }
          },
          "400": {
            "$ref": "./delivery_common.oas2.yml#/responses/400"
          },
          "401": {
            "$ref": "./delivery_common.oas2.yml#/responses/401"
          },
          "500": {
            "$ref": "./delivery_common.oas2.yml#/responses/500"
          }
        },
        "security": [
          {
            "Authorization": []
          },
          {
            "mfgId": []
          }
        ],
        "summary": "Retrieve list of genres and IDs",
        "tags": [
          "Genres"
        ]
      }
    },
    "/ipc/categories/{ipcCatPath}": {
      "get": {
        "description": "This path retrieves category information, paths, and lists of streams and podcasts that reside in those categories. When called with a single `/` as the `ipcCatPath` path parameter, it will return the highest-level (root) categories, and include the `ipcCatPath` parameters to navigate to the listed categories. If there are no child categories within a category path, a list of IP Content objects pertaining to the selected category will be returned.\n\nCategories can be defined and updated at any time. \n\nPagination is required, and handled by cursors. To navigate to the next set of results, query with `cursor` set to the value of `cursors[next]`. Optionally, add a `limit` parameter to define the number of results to return starting at that cursor. The maximum is 10 per response.",
        "operationId": "getIpcCategories",
        "parameters": [
          {
            "$ref": "./delivery_common.oas2.yml#/parameters/sort"
          },
          {
            "$ref": "./delivery_common.oas2.yml#/parameters/limit"
          },
          {
            "$ref": "./delivery_common.oas2.yml#/parameters/cursor"
          },
          {
            "$ref": "./delivery_common.oas2.yml#/parameters/ipcCatPath"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "childCount": 6,
                  "ipcCatPath": "categories/catalog/geo/north_america",
                  "logoURL": "https://s.cnrd.io/i/2/3/2334567890abcdef.png",
                  "name": "North America",
                  "type": "category"
                },
                {
                  "childCount": 0,
                  "ipcCatPath": "categories/catalog/geo/north_america/ca/a_z",
                  "logoURL": "https://s.cnrd.io/i/2/3/2334567890abcdef.png",
                  "name": "A-Z",
                  "type": "category"
                }
              ]
            },
            "schema": {
              "oneOf": [
                {
                  "items": {
                    "$ref": "./delivery_common.oas2.yml#/definitions/IPCCategory"
                  },
                  "type": "array"
                },
                {
                  "properties": {
                    "cursor": {
                      "$ref": "./delivery_common.oas2.yml#/definitions/Cursor"
                    },
                    "result": {
                      "properties": {
                        "podcasts": {
                          "items": {
                            "$ref": "./delivery_common.oas2.yml#/definitions/IPCObject"
                          },
                          "type": "array"
                        },
                        "streams": {
                          "items": {
                            "$ref": "./delivery_common.oas2.yml#/definitions/IPCObject"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              ]
            }
          },
          "400": {
            "$ref": "./delivery_common.oas2.yml#/responses/400"
          },
          "401": {
            "$ref": "./delivery_common.oas2.yml#/responses/401"
          },
          "404": {
            "$ref": "./delivery_common.oas2.yml#/responses/404"
          },
          "500": {
            "$ref": "./delivery_common.oas2.yml#/responses/500"
          }
        },
        "security": [
          {
            "Authorization": []
          },
          {
            "mfgId": []
          }
        ],
        "summary": "Retrieve IP content category paths containing nested categories or lists IP Content objects",
        "tags": [
          "IP Content"
        ]
      }
    },
    "/ipc/play/{ipcPlaybackId}": {
      "get": {
        "description": "This path provides information required to access IP content such as audio streams or podcast episodes by URL.\n\nThe `ipcPlaybackId` is found in the stream or podcast object retrieved via a search or other query.",
        "operationId": "getIpcPlayback",
        "parameters": [
          {
            "$ref": "./delivery_common.oas2.yml#/parameters/ipcPlaybackId-path"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "bitrate": 128000,
                "codec": "mp3",
                "format": "mp3",
                "mode": "stereo",
                "type": "stream",
                "url": "https://streamurl.example.com"
              }
            },
            "schema": {
              "$ref": "./delivery_common.oas2.yml#/definitions/IPContentPlayback"
            }
          },
          "400": {
            "$ref": "./delivery_common.oas2.yml#/responses/400"
          },
          "401": {
            "$ref": "./delivery_common.oas2.yml#/responses/401"
          },
          "404": {
            "$ref": "./delivery_common.oas2.yml#/responses/404"
          },
          "500": {
            "$ref": "./delivery_common.oas2.yml#/responses/500"
          }
        },
        "security": [
          {
            "Authorization": []
          },
          {
            "mfgId": []
          }
        ],
        "summary": "Retrieve playback information on a specific stream or podcast chapter ",
        "tags": [
          "IP Content"
        ]
      }
    },
    "/ipc/publishers/{ipcPublisherId}": {
      "get": {
        "description": "**This path is not yet in use.**\n\nIf there are one or more live content streams or podcasts associated with the requested `ipcPublisherId`, they will be listed here.\n\nPagination is required, and handled by cursors. To navigate to the next set of results, query with `cursor` set to the value of `cursors[next]`. Optionally, add a `limit` parameter to define the number of results to return starting at that cursor. The maximum is 10 per response.",
        "operationId": "getIpcPublisherContent",
        "parameters": [
          {
            "$ref": "./delivery_common.oas2.yml#/parameters/ipcPublisherId"
          },
          {
            "$ref": "./delivery_common.oas2.yml#/parameters/limit"
          },
          {
            "$ref": "./delivery_common.oas2.yml#/parameters/cursor"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "cursor": {
                  "current": "12345abcdef",
                  "next": "defabc12345",
                  "start": "abcdef12345"
                },
                "podcasts": [
                  {
                    "country": "US",
                    "description": "NPR's weekly current events quiz. Have a laugh and test your news knowledge while figuring out what's real and what we've made up.",
                    "genreIds": [
                      25
                    ],
                    "ipcContentId": "1-abcdef1234567890-p",
                    "language": "en_us",
                    "logoURL": "https://s.cnrd.io/i/1/2/1234567890abcdef.png",
                    "logoURLHiRes": "https://s.cnrd.io/i/2/3/2334567890abcdef.png",
                    "name": "Wait Wait... Don't Tell Me!",
                    "slogan": "NPR's news quiz",
                    "timezone": "UTC",
                    "type": "podcast",
                    "urls": {
                      "facebook": [
                        "http://www.facebook.com/fbpagename"
                      ],
                      "twitter": [
                        "https://twitter.com/twitterhandle"
                      ],
                      "website": [
                        "http://www.npr.org/programs/wait-wait-dont-tell-me/"
                      ]
                    }
                  }
                ],
                "streams": [
                  {
                    "country": "FR",
                    "description": "TSF c'est la radio du jazz, de son actualité, de ses acteurs pour tout ceux qui aiment le jazz",
                    "genreIds": [
                      21
                    ],
                    "ipcContentId": "1-abcdef1234567890-s",
                    "ipcPlaybackId": "1-abcdef1234567890-s",
                    "language": "French",
                    "logoURL": "https://s.cnrd.io/i/1/2/1234567890abcdef.png",
                    "logoURLHiRes": "https://s.cnrd.io/i/2/3/2334567890abcdef.png",
                    "name": "TSF Jazz",
                    "slogan": "24 heures sur 24, la seule radio 100 % jazz",
                    "timezone": "CET",
                    "type": "stream",
                    "urls": {
                      "facebook": [
                        "https://www.facebook.com/TSFJazz/"
                      ],
                      "twitter": [
                        "https://twitter.com/RadioTSFJAZZ"
                      ],
                      "website": [
                        "http://www.tsfjazz.com/"
                      ]
                    }
                  },
                  {
                    "country": "US",
                    "description": "KCRW's all-music channel blending the collected talents and tastes of all KCRW's DJs into a single voice streaming 24 hours a day. Always on, no time slots – just the best of KCRW whenever and wherever you want it.",
                    "genreIds": [
                      64
                    ],
                    "ipcContentId": "1-234abcdef1234567890-s",
                    "ipcPlaybackId": "1-234abcdef1234567890-s",
                    "language": "en_us",
                    "logoURL": "https://s.cnrd.io/i/1/2/1234567890abcdef.png",
                    "logoURLHiRes": "https://s.cnrd.io/i/2/3/2334567890abcdef.png",
                    "name": "KCRW - Eclectic24",
                    "slogan": "KCRW - Eclectic24",
                    "timezone": "UTC",
                    "type": "stream",
                    "urls": {
                      "facebook": [
                        "https://www.facebook.com/example"
                      ],
                      "twitter": [
                        "https://twitter.com/example"
                      ],
                      "website": [
                        "https://www.example.com"
                      ]
                    }
                  }
                ]
              }
            },
            "schema": {
              "properties": {
                "cursor": {
                  "$ref": "./delivery_common.oas2.yml#/definitions/Cursor"
                },
                "result": {
                  "properties": {
                    "podcasts": {
                      "items": {
                        "$ref": "./delivery_common.oas2.yml#/definitions/IPCObject"
                      },
                      "type": "array"
                    },
                    "streams": {
                      "items": {
                        "$ref": "./delivery_common.oas2.yml#/definitions/IPCObject"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "400": {
            "$ref": "./delivery_common.oas2.yml#/responses/400"
          },
          "401": {
            "$ref": "./delivery_common.oas2.yml#/responses/401"
          },
          "404": {
            "$ref": "./delivery_common.oas2.yml#/responses/404"
          },
          "500": {
            "$ref": "./delivery_common.oas2.yml#/responses/500"
          }
        },
        "security": [
          {
            "Authorization": []
          },
          {
            "mfgId": []
          }
        ],
        "summary": "Retrieves data on podcasts or streams associated with the `ipcPublisherId`",
        "tags": [
          "IP Content"
        ]
      }
    },
    "/ipc/search": {
      "get": {
        "description": "This path provides search functions for IP content, such as audio streams and podcasts. The `search` parameter is the text string to match, and the `type` parameter can be used to select only `streams`, or only `podcasts`. The default is to return all types.\n\nPagination is required, and handled by cursors. To navigate to the next set of results, query with `cursor` set to the value of `cursors[next]`. Optionally, add a `limit` parameter to define the number of results to return starting at that cursor. The maximum is 10 per response.",
        "operationId": "ipcSearch",
        "parameters": [
          {
            "$ref": "./delivery_common.oas2.yml#/parameters/ipcType"
          },
          {
            "$ref": "./delivery_common.oas2.yml#/parameters/search"
          },
          {
            "$ref": "./delivery_common.oas2.yml#/parameters/cursor"
          },
          {
            "$ref": "./delivery_common.oas2.yml#/parameters/limit"
          },
          {
            "$ref": "./delivery_common.oas2.yml#/parameters/location"
          },
          {
            "$ref": "./delivery_common.oas2.yml#/parameters/priority"
          },
          {
            "$ref": "./delivery_common.oas2.yml#/parameters/language"
          },
          {
            "$ref": "./delivery_common.oas2.yml#/parameters/country"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "cursor": {
                  "current": "12345abced",
                  "next": "23456abcdef",
                  "start": "abcdef12345"
                },
                "result": {
                  "podcasts": [
                    {
                      "country": "US",
                      "description": "NPR's weekly current events quiz. Have a laugh and test your news knowledge while figuring out what's real and what we've made up.",
                      "genreIds": [
                        25
                      ],
                      "ipcContentId": "1-abcdef1234567890-p",
                      "language": "en_us",
                      "logoURL": "https://s.cnrd.io/i/1/2/1234567890abcdef.png",
                      "logoURLHiRes": "https://s.cnrd.io/i/2/3/2334567890abcdef.png",
                      "name": "Wait Wait... Don't Tell Me!",
                      "slogan": "NPR's news quiz",
                      "timezone": "UTC",
                      "type": "podcast",
                      "urls": {
                        "facebook": [
                          "http://www.facebook.com/fbpagename"
                        ],
                        "twitter": [
                          "https://twitter.com/twitterhandle"
                        ],
                        "website": [
                          "http://www.npr.org/programs/wait-wait-dont-tell-me/"
                        ]
                      }
                    }
                  ],
                  "streams": [
                    {
                      "country": "FR",
                      "description": "TSF c'est la radio du jazz, de son actualité, de ses acteurs pour tout ceux qui aiment le jazz",
                      "genreIds": [
                        21
                      ],
                      "ipcContentId": "1-abcdef1234567890-s",
                      "ipcPlaybackId": "1-abcdef1234567890-s",
                      "language": "French",
                      "logoURL": "https://s.cnrd.io/i/1/2/1234567890abcdef.png",
                      "logoURLHiRes": "https://s.cnrd.io/i/2/3/2334567890abcdef.png",
                      "name": "TSF Jazz",
                      "slogan": "24 heures sur 24, la seule radio 100 % jazz",
                      "timezone": "CET",
                      "type": "stream",
                      "urls": {
                        "facebook": [
                          "https://www.facebook.com/TSFJazz/"
                        ],
                        "twitter": [
                          "https://twitter.com/RadioTSFJAZZ"
                        ],
                        "website": [
                          "http://www.tsfjazz.com/"
                        ]
                      }
                    },
                    {
                      "country": "US",
                      "description": "KCRW's all-music channel blending the collected talents and tastes of all KCRW's DJs into a single voice streaming 24 hours a day. Always on, no time slots – just the best of KCRW whenever and wherever you want it.",
                      "genreIds": [
                        64
                      ],
                      "ipcContentId": "1-234abcdef1234567890-s",
                      "ipcPlaybackId": "1-234abcdef1234567890-s",
                      "language": "en_us",
                      "logoURL": "https://s.cnrd.io/i/1/2/1234567890abcdef.png",
                      "logoURLHiRes": "https://s.cnrd.io/i/2/3/2334567890abcdef.png",
                      "name": "KCRW - Eclectic24",
                      "slogan": "KCRW - Eclectic24",
                      "timezone": "UTC",
                      "type": "stream",
                      "urls": {
                        "facebook": [
                          "https://www.facebook.com/example"
                        ],
                        "twitter": [
                          "https://twitter.com/example"
                        ],
                        "website": [
                          "https://www.example.com"
                        ]
                      }
                    }
                  ]
                }
              }
            },
            "schema": {
              "properties": {
                "cursor": {
                  "$ref": "./delivery_common.oas2.yml#/definitions/Cursor"
                },
                "result": {
                  "properties": {
                    "podcasts": {
                      "items": {
                        "$ref": "./delivery_common.oas2.yml#/definitions/IPCObject"
                      },
                      "type": "array"
                    },
                    "streams": {
                      "items": {
                        "$ref": "./delivery_common.oas2.yml#/definitions/IPCObject"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "400": {
            "description": "No results found, or missing parameter",
            "schema": {
              "$ref": "./delivery_common.oas2.yml#/definitions/Error"
            }
          },
          "401": {
            "description": "Authorization/authentication error",
            "schema": {
              "$ref": "./delivery_common.oas2.yml#/definitions/Error"
            }
          },
          "404": {
            "$ref": "./delivery_common.oas2.yml#/responses/404"
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "$ref": "./delivery_common.oas2.yml#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          },
          {
            "mfgId": []
          }
        ],
        "summary": "Search functions for IP content",
        "tags": [
          "IP Content"
        ]
      }
    },
    "/ipc/{ipcContentId}": {
      "get": {
        "description": "This path returns information on a specific podcast or stream, such as `name`, `description`, and so on.",
        "operationId": "getIpContentById",
        "parameters": [
          {
            "$ref": "./delivery_common.oas2.yml#/parameters/ipcContentId"
          },
          {
            "$ref": "./delivery_common.oas2.yml#/parameters/ipcType"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "country": "US",
                "description": "Example stream description",
                "genreIds": [
                  68,
                  33
                ],
                "ipcContentId": "1-abcdef1234567890-s",
                "ipcPlaybackId": "1-abcdef1234567890-s",
                "language": "en_us",
                "logoURL": "https://s.cnrd.io/i/1/2/1234567890abcdef.png",
                "logoURLHiRes": "https://s.cnrd.io/i/2/3/2334567890abcdef.png",
                "name": "WKRP in Cincinnati",
                "slogan": "Example stream or station slogan",
                "timezone": "UTC",
                "type": "stream",
                "urls": {
                  "facebook": [
                    "https://www.facebook.com/example"
                  ],
                  "twitter": [
                    "https://twitter.com/example"
                  ],
                  "website": [
                    "https://www.example.com"
                  ]
                }
              }
            },
            "schema": {
              "$ref": "./delivery_common.oas2.yml#/definitions/IPCObject"
            }
          },
          "400": {
            "$ref": "./delivery_common.oas2.yml#/responses/400"
          },
          "401": {
            "$ref": "./delivery_common.oas2.yml#/responses/401"
          },
          "404": {
            "$ref": "./delivery_common.oas2.yml#/responses/404"
          },
          "500": {
            "$ref": "./delivery_common.oas2.yml#/responses/500"
          }
        },
        "security": [
          {
            "Authorization": []
          },
          {
            "mfgId": []
          }
        ],
        "summary": "Retrieve information on a specific podcast or stream",
        "tags": [
          "IP Content"
        ]
      }
    },
    "/ipc/{ipcContentId}/episodes": {
      "get": {
        "description": "This path provides a list of podcast episodes for this `ipcContentId`, if `ipcContentId` describes a podcast object.\n\nPagination is required, and handled by cursors. To navigate to the next set of results, query with `cursor` set to the value of `cursors[next]`. Optionally, add a `limit` parameter to define the number of results to return starting at that cursor. The maximum is 10 per response.",
        "operationId": "getIpcPodcastEpisodes",
        "parameters": [
          {
            "$ref": "./delivery_common.oas2.yml#/parameters/ipcContentId"
          },
          {
            "$ref": "./delivery_common.oas2.yml#/parameters/limit"
          },
          {
            "$ref": "./delivery_common.oas2.yml#/parameters/cursor"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "cursor": {
                  "current": "123456abcdef",
                  "next": "defabc12345",
                  "start": "abcdefg123456"
                },
                "result": [
                  {
                    "description": "Christine Lagarde, Managing Director of the IMF, joins us along with panelists Paula Poundstone, Adam Burke, and Faith Salie.",
                    "duration": 2970,
                    "genreIds": [
                      25
                    ],
                    "headline": "Christine Lagarde",
                    "ipcContentId": "1-abcdef1234567890-p",
                    "ipcPlaybackId": "1-6789abcdefg123-p",
                    "logoURL": "https://s.cnrd.io/i/1/2/1234567890abcdef.png",
                    "logoURLHiRes": "https://s.cnrd.io/i/2/3/2334567890abcdef.png",
                    "published": "2018-07-07T05:41:18.763Z",
                    "type": "episode",
                    "urls": {
                      "website": [
                        "http://www.npr.org/programs/wait-wait-dont-tell-me/"
                      ]
                    }
                  },
                  {
                    "description": "Fabien Cousteau, oceanographer, joins us along with panelists Paula Poundstone, Tom Papa, and Negin Farsad.",
                    "duration": 2898,
                    "genreIds": [
                      25
                    ],
                    "headline": "Fabien Cousteau",
                    "ipcContentId": "1-123abcdef1234567890-p",
                    "ipcPlaybackId": "1-456abcdefg-p",
                    "logoURL": "https://s.cnrd.io/i/1/2/1234567890abcdef.png",
                    "logoURLHiRes": "https://s.cnrd.io/i/2/3/2334567890abcdef.png",
                    "published": "2018-06-30T05:41:18.763Z",
                    "type": "episode",
                    "urls": {
                      "website": [
                        "http://www.npr.org/programs/wait-wait-dont-tell-me/"
                      ]
                    }
                  }
                ]
              }
            },
            "schema": {
              "properties": {
                "cursor": {
                  "$ref": "./delivery_common.oas2.yml#/definitions/Cursor"
                },
                "result": {
                  "items": {
                    "$ref": "./delivery_common.oas2.yml#/definitions/IPCPodcastEpisodeObject"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "400": {
            "$ref": "./delivery_common.oas2.yml#/responses/400"
          },
          "401": {
            "$ref": "./delivery_common.oas2.yml#/responses/401"
          },
          "404": {
            "$ref": "./delivery_common.oas2.yml#/responses/404"
          },
          "500": {
            "$ref": "./delivery_common.oas2.yml#/responses/500"
          }
        },
        "security": [
          {
            "Authorization": []
          },
          {
            "mfgId": []
          }
        ],
        "summary": "Retrieve a list of podcast episodes if `ipcContentId` is of type `podcast`. Does not apply to stream objects.",
        "tags": [
          "IP Content"
        ]
      }
    },
    "/ipc/{ipcContentId}/latest": {
      "get": {
        "description": "Retrieve the latest episode of a podcast if `ipcContentId` is of type `podcast`. Does not apply to stream objects.",
        "operationId": "getIpcPodcastLatest",
        "parameters": [
          {
            "$ref": "./delivery_common.oas2.yml#/parameters/ipcContentId"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "description": "Christine Lagarde",
                "duration": 2970,
                "genreIds": [
                  25
                ],
                "headline": "Christine Lagarde, Managing Director of the IMF, joins us along with panelists Paula Poundstone, Adam Burke, and Faith Salie.",
                "ipcContentId": "1-abcdef1234567890-p",
                "ipcPlaybackId": "1-6789abcdefg123-p",
                "logoURL": "https://s.cnrd.io/i/1/2/1234567890abcdef.png",
                "logoURLHiRes": "https://s.cnrd.io/i/2/3/2334567890abcdef.png",
                "published": "2018-01-10T05:41:18.763Z",
                "type": "chapter",
                "urls": {
                  "website": [
                    "http://www.npr.org/programs/wait-wait-dont-tell-me/"
                  ]
                }
              }
            },
            "schema": {
              "$ref": "./delivery_common.oas2.yml#/definitions/IPCPodcastEpisodeObject"
            }
          },
          "400": {
            "$ref": "./delivery_common.oas2.yml#/responses/400"
          },
          "401": {
            "$ref": "./delivery_common.oas2.yml#/responses/401"
          },
          "404": {
            "$ref": "./delivery_common.oas2.yml#/responses/404"
          },
          "500": {
            "$ref": "./delivery_common.oas2.yml#/responses/500"
          }
        },
        "security": [
          {
            "Authorization": []
          },
          {
            "mfgId": []
          }
        ],
        "summary": "Retrieve the latest episode of a podcast if `ipcContentId` is of type `podcast`. Does not apply to stream objects.",
        "tags": [
          "IP Content"
        ]
      }
    },
    "/ipc/{ipcContentId}/similar": {
      "get": {
        "description": "Retrieve a list of similar podcasts or streams if `ipcContentId` is of type `podcast` or `stream`.\n\nPagination is required, and handled by cursors. To navigate to the next set of results, query with `cursor` set to the value of `cursors[next]`. Optionally, add a `limit` parameter to define the number of results to return starting at that cursor. The maximum is 10 per response.",
        "operationId": "getIpcPodcastSimilar",
        "parameters": [
          {
            "$ref": "./delivery_common.oas2.yml#/parameters/ipcContentId"
          },
          {
            "$ref": "./delivery_common.oas2.yml#/parameters/limit"
          },
          {
            "$ref": "./delivery_common.oas2.yml#/parameters/cursor"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "cursor": {
                  "current": "12345abced",
                  "next": "23456abcdef",
                  "start": "abcdef12345"
                },
                "result": {
                  "podcasts": [
                    {
                      "country": "US",
                      "description": "NPR's weekly current events quiz. Have a laugh and test your news knowledge while figuring out what's real and what we've made up.",
                      "genreIds": [
                        25
                      ],
                      "ipcContentId": "1-abcdef1234567890-p",
                      "language": "en_us",
                      "logoURL": "https://s.cnrd.io/i/1/2/1234567890abcdef.png",
                      "logoURLHiRes": "https://s.cnrd.io/i/2/3/2334567890abcdef.png",
                      "name": "Wait Wait... Don't Tell Me!",
                      "slogan": "NPR's news quiz",
                      "timezone": "UTC",
                      "type": "podcast",
                      "urls": {
                        "facebook": [
                          "http://www.facebook.com/fbpagename"
                        ],
                        "twitter": [
                          "https://twitter.com/twitterhandle"
                        ],
                        "website": [
                          "http://www.npr.org/programs/wait-wait-dont-tell-me/"
                        ]
                      }
                    }
                  ],
                  "streams": [
                    {
                      "country": "FR",
                      "description": "TSF c'est la radio du jazz, de son actualité, de ses acteurs pour tout ceux qui aiment le jazz",
                      "genreIds": [
                        21
                      ],
                      "ipcContentId": "1-abcdef1234567890-s",
                      "ipcPlaybackId": "1-abcdef1234567890-s",
                      "language": "French",
                      "logoURL": "https://s.cnrd.io/i/1/2/1234567890abcdef.png",
                      "logoURLHiRes": "https://s.cnrd.io/i/2/3/2334567890abcdef.png",
                      "name": "TSF Jazz",
                      "slogan": "24 heures sur 24, la seule radio 100 % jazz",
                      "timezone": "CET",
                      "type": "stream",
                      "urls": {
                        "facebook": [
                          "https://www.facebook.com/TSFJazz/"
                        ],
                        "twitter": [
                          "https://twitter.com/RadioTSFJAZZ"
                        ],
                        "website": [
                          "http://www.tsfjazz.com/"
                        ]
                      }
                    },
                    {
                      "country": "US",
                      "description": "KCRW's all-music channel blending the collected talents and tastes of all KCRW's DJs into a single voice streaming 24 hours a day. Always on, no time slots – just the best of KCRW whenever and wherever you want it.",
                      "genreIds": [
                        64
                      ],
                      "ipcContentId": "1-234abcdef1234567890-s",
                      "ipcPlaybackId": "1-234abcdef1234567890-s",
                      "language": "en_us",
                      "logoURL": "https://s.cnrd.io/i/1/2/1234567890abcdef.png",
                      "logoURLHiRes": "https://s.cnrd.io/i/2/3/2334567890abcdef.png",
                      "name": "KCRW - Eclectic24",
                      "slogan": "KCRW - Eclectic24",
                      "timezone": "UTC",
                      "type": "stream",
                      "urls": {
                        "facebook": [
                          "https://www.facebook.com/example"
                        ],
                        "twitter": [
                          "https://twitter.com/example"
                        ],
                        "website": [
                          "https://www.example.com"
                        ]
                      }
                    }
                  ]
                }
              }
            },
            "schema": {
              "properties": {
                "cursor": {
                  "$ref": "./delivery_common.oas2.yml#/definitions/Cursor"
                },
                "result": {
                  "properties": {
                    "podcasts": {
                      "items": {
                        "$ref": "./delivery_common.oas2.yml#/definitions/IPCObject"
                      },
                      "type": "array"
                    },
                    "streams": {
                      "items": {
                        "$ref": "./delivery_common.oas2.yml#/definitions/IPCObject"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "400": {
            "$ref": "./delivery_common.oas2.yml#/responses/400"
          },
          "401": {
            "$ref": "./delivery_common.oas2.yml#/responses/401"
          },
          "404": {
            "$ref": "./delivery_common.oas2.yml#/responses/404"
          },
          "500": {
            "$ref": "./delivery_common.oas2.yml#/responses/500"
          }
        },
        "security": [
          {
            "Authorization": []
          },
          {
            "mfgId": []
          }
        ],
        "summary": "Retrieve a list of similar podcasts or streams if `ipcContentId` is of type `podcast` or `stream`.",
        "tags": [
          "IP Content"
        ]
      }
    },
    "/localevents/events/{leEventId}": {
      "get": {
        "description": "Get information on a specific event by ID. The `leEventId` is found in a `/localevents` object returned from a search.",
        "operationId": "getLocalEventsById",
        "parameters": [
          {
            "$ref": "./delivery_common.oas2.yml#/parameters/leEventId"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "events": {
                  "categories": [
                    "Concerts - Jazz",
                    "Clubbing & Nightlife - Live Music - Jazz"
                  ],
                  "distance": "10.4",
                  "id": "321600510",
                  "name": "Charlie Hunter Trio",
                  "schedule": {
                    "bookingInfo": {
                      "bookingLink": {
                        "bookingURL": "http://www.shareasale.com/r.cfm?u=479796&b=234786&m=27601&afftrack=&urllink=https://www.ticketfly.com/purchase/event/1663317/tfly?utm_medium=api",
                        "price": {
                          "currency": "USD",
                          "value": "25.00"
                        },
                        "provider": "ticketfly"
                      }
                    },
                    "dates": {
                      "end": "2018-07-27",
                      "start": "2018-07-27"
                    },
                    "eventTime": "21:00:00",
                    "leVenueId": "842585"
                  }
                },
                "venues": {
                  "address": {
                    "address1": "860 San Pablo Avenue",
                    "city": "Albany",
                    "country": {
                      "name": "United States"
                    },
                    "latitude": "37.89040500",
                    "longitude": "-122.29930570",
                    "state": "CA",
                    "zip": "94706"
                  },
                  "categories": [
                    "Contemporary",
                    "Bars & Pubs"
                  ],
                  "email": "info@ivyroom.com",
                  "leVenueId": "842585",
                  "longDesc": "Dating back to as early as the 1940's, Ivy Room is one of the ultimate destinations for entertainment, socializing and free-flowing drinks. This neighborhood bar is essentially known for the dazzling line-up of bands and live musical and karaoke performances it houses. From Caitlin Glennon to Matthew Hansen, patronize striking melodies created by a mixed bag of artists amid leather booths, dim decor and a state-of-the-art sound system.",
                  "name": "Ivy Room",
                  "phone": "+1 510 526 5888",
                  "shortDesc": "Nocturnal Melodies",
                  "url": "http://www.ivyroom.com/"
                }
              }
            },
            "schema": {
              "$ref": "./delivery_common.oas2.yml#/definitions/LocalEventsEvent"
            }
          },
          "400": {
            "$ref": "./delivery_common.oas2.yml#/responses/400"
          },
          "401": {
            "$ref": "./delivery_common.oas2.yml#/responses/401"
          },
          "500": {
            "$ref": "./delivery_common.oas2.yml#/responses/500"
          }
        },
        "security": [
          {
            "Authorization": []
          },
          {
            "mfgId": []
          }
        ],
        "summary": "Get information on a specific event by ID",
        "tags": [
          "Local Events"
        ]
      }
    },
    "/localevents/search": {
      "get": {
        "description": "Search functions for local events related to broadcast information such as broadcast genre or live data such as artist name. Supported genres are aligned with the response from the `/genres` path and are referenced by ID.\n\nEx. `https://a.sandbox.cnrd.io/localevents/search?lat=37.774&lng=-122.419&type=artistEvents&artistName=Charlie%20Hunter&range=20mi`\n\nPagination is required, and handled by cursors. To navigate to the next set of results, query with `cursor` set to the value of `cursors[next]`. Optionally, add a `limit` parameter to define the number of results to return starting at that cursor. The maximum is 10 per response.\n",
        "operationId": "searchLocalEvents",
        "parameters": [
          {
            "$ref": "./delivery_common.oas2.yml#/parameters/lat"
          },
          {
            "$ref": "./delivery_common.oas2.yml#/parameters/lng"
          },
          {
            "$ref": "./delivery_common.oas2.yml#/parameters/leType"
          },
          {
            "$ref": "./delivery_common.oas2.yml#/parameters/leArtistName"
          },
          {
            "$ref": "./delivery_common.oas2.yml#/parameters/leGenreId"
          },
          {
            "$ref": "./delivery_common.oas2.yml#/parameters/leRange"
          },
          {
            "$ref": "./delivery_common.oas2.yml#/parameters/lang"
          },
          {
            "$ref": "./delivery_common.oas2.yml#/parameters/leDayLimit"
          },
          {
            "$ref": "./delivery_common.oas2.yml#/parameters/leCompact"
          },
          {
            "$ref": "./delivery_common.oas2.yml#/parameters/limit"
          },
          {
            "$ref": "./delivery_common.oas2.yml#/parameters/cursor"
          },
          {
            "$ref": "./delivery_common.oas2.yml#/parameters/stripHTML"
          },
          {
            "$ref": "./delivery_common.oas2.yml#/parameters/leNonMusicResults"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "cursor": {
                  "current": "12345abcdefg",
                  "next": "defg123455",
                  "start": "abcdef12345"
                },
                "result": {
                  "events": [
                    {
                      "desc": "Wormtown Ska presents: A Night of Brass! This will be the first jazz, funk, reggae and ska mashup! And there will be a lot of horns to get your brass fix!<br /><br />Featuring:The Dapper Brass - Funk/Jazz Brass band from Boston!<br /><br />Revolutionary Snake Ensemble - NOLA style Jazz, Funk, Street Beat from Boston!<br /><br />Ghost Town Steppas - Originally from New Orleans LA and on tour from Malibu CA, this super group brings their sweet blends of two-tone and reggae!<br /><br />So Long Liberty - Ska / Punk / Rock / Reggae from CT!<br /><br />At The Raven Music Hall in Worcester!<br />258 Pleasant St, 01609<br />10.00 (21+) and 12.00 (18+)",
                      "distance": "39.1",
                      "genreIds": [
                        23
                      ],
                      "leEventId": "330938942",
                      "name": "A Night of Brass!",
                      "schedule": {
                        "dates": {
                          "end": "2018-07-27",
                          "start": "2018-07-27"
                        },
                        "eventTime": "20:00:00",
                        "venue_id": "333902"
                      },
                      "types": [
                        "Concerts - Jazz"
                      ]
                    }
                  ],
                  "venues": [
                    {
                      "address": {
                        "address1": "169 Ocean Boulevard",
                        "city": "Hampton Beach",
                        "country": {
                          "name": "United States"
                        },
                        "latitude": "42.90972090",
                        "longitude": "-70.81094390",
                        "state": "NH",
                        "zip": "03842"
                      },
                      "email": "info@Casinoballroom.com",
                      "fax": "+1 603 926 9505",
                      "id": "582887",
                      "imageURL": "https://s.cnrd.io/e/1/2/12333902abcdefg.jpg",
                      "longDesc": "The classic Casino Ballroom at Hampton Beach has come a long way from the swinging big-band times in the 1930's to the popular concert venue that it is today. Come catch a performance at the century-old Ballroom during its season from April to November. Famous performers and entertainers like Black Sabbath, Tracy Chapman, The Crosby's, U2, Jerry Seinfeld and Jay Leno have been some of the many who have entertained their fans here. Stay energized and pumped with the range of snacks like pizzas, nachos, sandwiches and various drinks available.",
                      "name": "Casino Ballroom Hampton Beach",
                      "neighborhood": "Outside the City",
                      "phone": [
                        "+1 603 929 4100",
                        "+1 603 929 4201"
                      ],
                      "shortDesc": "Rocking Relic",
                      "types": [
                        "Concert Hall"
                      ],
                      "url": "http://www.casinoballroom.com/"
                    },
                    {
                      "address": {
                        "address1": "258 Pleasant Street",
                        "city": "Worcester",
                        "country": {
                          "name": "United States"
                        },
                        "latitude": "42.26384000",
                        "longitude": "-71.81089000",
                        "state": "MA",
                        "zip": "01609"
                      },
                      "id": "582887",
                      "name": "Raven Music Hall",
                      "types": [
                        "Major Events",
                        "Concert Hall"
                      ]
                    }
                  ]
                }
              }
            },
            "schema": {
              "properties": {
                "cursor": {
                  "$ref": "./delivery_common.oas2.yml#/definitions/Cursor"
                },
                "result": {
                  "$ref": "./delivery_common.oas2.yml#/definitions/LocalEventsEvent"
                }
              },
              "type": "object"
            }
          },
          "400": {
            "$ref": "./delivery_common.oas2.yml#/responses/400"
          },
          "401": {
            "$ref": "./delivery_common.oas2.yml#/responses/401"
          },
          "500": {
            "$ref": "./delivery_common.oas2.yml#/responses/500"
          }
        },
        "security": [
          {
            "Authorization": []
          },
          {
            "mfgId": []
          }
        ],
        "summary": "Search for local events related to genres or live artist metadata",
        "tags": [
          "Local Events"
        ]
      }
    },
    "/reports": {
      "post": {
        "description": "This path allows the client to submit service usage reports to the API containing data on broadcasts and other media consumption.\n\nThis report is to be submitted on a scheduled basis as determined by the `reportsMinInterval` and `reportsMaxInterval` values in the `/config` response. Data collected by the client within those time limits is then submitted to the API and a new report is begun.\n\nIf a report has not been successfully submitted within the elapsed time specified in the `reportsMaxInterval` value, then the report is discarded and a new report begun. If the report size exceeds `reportsMaxSize` before submission, then the report is discarded and a new report begun.",
        "operationId": "submitReport",
        "parameters": [
          {
            "$ref": "./delivery_common.oas2.yml#/parameters/mfgId"
          },
          {
            "$ref": "./delivery_common.oas2.yml#/parameters/Authorization"
          },
          {
            "description": "Reported data",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "./delivery_common.oas2.yml#/definitions/Report"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "./delivery_common.oas2.yml#/responses/200"
          },
          "400": {
            "$ref": "./delivery_common.oas2.yml#/responses/Reports-400"
          },
          "401": {
            "$ref": "./delivery_common.oas2.yml#/responses/Reports-401"
          },
          "500": {
            "$ref": "./delivery_common.oas2.yml#/responses/Reports-500"
          }
        },
        "security": [
          {
            "Authorization": []
          },
          {
            "mfgId": []
          }
        ],
        "summary": "Submit service usage reports",
        "tags": [
          "Reports"
        ]
      }
    },
    "/reports/actions": {
      "post": {
        "description": "This path allows the client to submit a notification of an action to the API. This is where user interactions with the services provided by the API are logged, including user actions such as exiting the listening session.\n\nThese actions include the user clicking on buttons in the UI that are present due to data returned by the API, such as SMS and phone numbers, location data for maps/navigation purposes, sharing information on social media and so forth.",
        "operationId": "submitActionReport",
        "parameters": [
          {
            "$ref": "./delivery_common.oas2.yml#/parameters/mfgId"
          },
          {
            "$ref": "./delivery_common.oas2.yml#/parameters/Authorization"
          },
          {
            "description": "Action data",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "./delivery_common.oas2.yml#/definitions/ReportAction"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "./delivery_common.oas2.yml#/responses/200"
          },
          "400": {
            "$ref": "./delivery_common.oas2.yml#/responses/Reports-400"
          },
          "401": {
            "$ref": "./delivery_common.oas2.yml#/responses/Reports-401"
          },
          "500": {
            "$ref": "./delivery_common.oas2.yml#/responses/Reports-500"
          }
        },
        "security": [
          {
            "Authorization": []
          },
          {
            "mfgId": []
          }
        ],
        "summary": "Submit an action report",
        "tags": [
          "Reports"
        ]
      }
    },
    "/reports/signal": {
      "post": {
        "description": "This path allows the client to submit a signal strength report containing the currently tuned `broadcastId` and a signal strength value",
        "operationId": "submitSignalReport",
        "parameters": [
          {
            "$ref": "./delivery_common.oas2.yml#/parameters/mfgId"
          },
          {
            "$ref": "./delivery_common.oas2.yml#/parameters/Authorization"
          },
          {
            "description": "Signal data",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "./delivery_common.oas2.yml#/definitions/SignalReport"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "./delivery_common.oas2.yml#/responses/200"
          },
          "400": {
            "$ref": "./delivery_common.oas2.yml#/responses/Reports-400"
          },
          "401": {
            "$ref": "./delivery_common.oas2.yml#/responses/Reports-401"
          },
          "500": {
            "$ref": "./delivery_common.oas2.yml#/responses/Reports-500"
          }
        },
        "security": [
          {
            "Authorization": []
          },
          {
            "mfgId": []
          }
        ],
        "summary": "Submit a signal strength report",
        "tags": [
          "Reports"
        ]
      }
    }
  },
  "produces": [
    "application/json"
  ],
  "responses": {},
  "schemes": [
    "https"
  ],
  "security": [
    {
      "Authorization": [],
      "mfgId": []
    }
  ],
  "securityDefinitions": {
    "Authorization": {
      "description": "The format is `{deviceId},{hash}`, where the `hash` is `HMAC_SHA256(mfgSecret, deviceId)`.\nThe `hash` is hex digest, truncated to 24 characters.\nExample: `Authorization: asdbh23456sdf,fd9f655862c9bd4da0edb845`\n\n`mfgId` is also required, and is assigned by DTS during production rollout planning.\n\nExample: `mfgId: ABCDEF123456`",
      "in": "header",
      "name": "Authorization",
      "type": "apiKey"
    },
    "mfgId": {
      "description": "The `mfgId` is assigned by DTS. It is required to be present as a header in every request made to the API. The format is the `mfgId` as a string. Example: `DEV-0001`. The IDs used in sandbox will not work in production.",
      "in": "header",
      "name": "mfgId",
      "type": "apiKey"
    }
  },
  "swagger": "2.0",
  "tags": [
    {
      "description": "Device interaction, id assignments, configuration retrieval",
      "name": "Devices"
    },
    {
      "description": "Genre names and ids",
      "name": "Genres"
    },
    {
      "description": "Static broadcast data retrieval",
      "name": "Broadcasts"
    },
    {
      "description": "Currently playing program data",
      "name": "Live"
    },
    {
      "description": "Service utilization reporting",
      "name": "Reports"
    },
    {
      "description": "IP content such as streams and podcasts",
      "name": "IP Content"
    },
    {
      "description": "Information on local events related to broadcast content",
      "name": "Local Events"
    }
  ]
}